buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}


plugins {
    id 'org.springframework.boot' version '1.5.2.RELEASE'
    id 'java'
}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

//apply plugin: 'java'
//apply plugin: 'idea'
//apply plugin: 'org.springframework.boot'

//[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


task createJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
}

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("net.sourceforge.nekohtml:nekohtml:1.9.22")

    //compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.2.0")
    compile("org.mybatis:mybatis-typehandlers-jsr310:1.0.0")
    compile("mysql:mysql-connector-java:5.1.39")

    compile("org.springframework.boot:spring-boot-starter-aop")

    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-redis")

    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.projectlombok:lombok:1.16.12")
    compile("com.alibaba:fastjson:1.2.21")

    testCompile("junit:junit:4.12")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

jar {
    baseName = 'app'
//    version = '1.0'
}

bootRun {
    addResources = true
}

springBoot {
    backupSource = false
}

bootRepackage {
    mainClass = 'com.dnk.Application'
}
